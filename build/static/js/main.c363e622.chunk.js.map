{"version":3,"sources":["leftpaneButtons.js","searchResults.js","RenderBody.js","Editform.js","App.js","serviceWorker.js","index.js"],"names":["LeftPaneButtons","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderInitial","bind","assertThisInitialized","event","id","recipeBtns","_this2","dishesValues","values","elements","forEach","item","index","push","react_default","a","createElement","key","dish","className","type","defaultValue","onClick","sendToBtns","Component","SearchResults","state","isClearable","blurInputOnSelect","_this$state","react_select_esm","options","onChange","userSelection","onFocus","focus","onBlur","isFocused","RenderRight","initialRender","renderRecipe","renderAddedRecipe","Fragment","servings","cooking_time","ingredients","directions","edit","fa","remove","recipeRender","addRecipe","search","EditForm","cancel","onSubmit","save","name","handleInputChange","rows","cols","cancelBtn","App","editForm","recipes","results","recipeBtn","add","nextid","resetAll","editFunction","editFormTrue","searchValues","home","helpIdGenerator","localStorage","getItem","setState","toConsumableArray","concat","localSetState","prevProps","prevState","setItem","JSON","stringify","v4","getData","parse","value","filter","text","idList","map","i","num","returnID","indexOf","src_Editform","target","defineProperty","e","preventDefault","newRecipe","recipe","objectSpread","_this3","sentValue","label","recipeObj","searchResults_SearchResults","leftpaneButtons","src_RenderBody","resetStates","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c363e622.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./leftPane.css\";\r\n\r\nclass LeftPaneButtons extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.renderInitial = this.renderInitial.bind(this);\r\n    }\r\n\r\n    sendToBtns(event, id){\r\n        this.props.recipeBtns(event, id);\r\n    }\r\n\r\n    renderInitial(){\r\n        var dishesValues = this.props.values;\r\n        var elements = [];\r\n        dishesValues.forEach((item, index) => { \r\n            elements.push(<div key={item.id + item.dish[0]} className=\"recipeNames\"><button className=\"recipeBtn\" key={index + item.dish[0]} type=\"button\" defaultValue={item.dish}  onClick={this.sendToBtns.bind(this, item.id)}><p id=\"textContainer\"><span id=\"dishText\">{item.dish}</span></p></button></div>)\r\n        })\r\n        return elements;\r\n    }\r\n\r\n    render(){\r\n        return this.renderInitial();\r\n    }\r\n}\r\n\r\nexport default LeftPaneButtons;","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\n\r\n    //opt => this.props.userSelection(opt.label, opt.value)\r\n  type State = {\r\n      isClearable: boolean,\r\n      blurInputOnSelect: boolean,\r\n  };\r\n\r\n  export default class SearchResults extends Component<*, State> {\r\n    state = {\r\n          isClearable: true,\r\n          blurInputOnSelect: true,\r\n      };\r\n \r\n  render(){\r\n  const {\r\n    isClearable,\r\n    blurInputOnSelect,\r\n  } = this.state;\r\n\r\n    return(\r\n        <div className=\"searchInput\">\r\n            <Select options={this.props.values} isClearable={isClearable} onChange={this.props.userSelection} onFocus={this.props.focus} onBlur={this.props.isFocused} blurInputOnSelect={blurInputOnSelect}/>\r\n        </div>\r\n          )\r\n}\r\n};\r\n","import React, { Component } from 'react';\r\nimport \"./RenderBody.css\";\r\nimport { FaEdit, FaRegTrashAlt} from 'react-icons/fa';\r\n\r\n\r\nclass RenderRight extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.initialRender = this.initialRender.bind(this);\r\n        this.renderRecipe = this.renderRecipe.bind(this);\r\n        this.renderAddedRecipe = this.renderAddedRecipe.bind(this);\r\n    }\r\n\r\ninitialRender(){\r\n    return [\r\n        <h2 key=\"ff\" id=\"welcomeText\">Welcome to your own personal recipe box!</h2>,\r\n        <h4 key=\"df\" id=\"\">Add, delete, edit and store all your favorite recipes! So go on ahead and try it out!</h4>\r\n    ]\r\n}\r\n\r\nrenderRecipe(){\r\n    return[ \r\n                <>\r\n                <div key={this.props.id} id=\"recipeName\">\r\n                    <h2>{this.props.dish}</h2>\r\n                    <hr className=\"DishNameHR hrStyle\" />\r\n                </div>\r\n                <div className=\"recipeInfo\">\r\n                    <div key={this.props.id + 1}  id=\"servings\" className=\"recipeOutput\">\r\n                       <span className=\"servingsLine servings label\">Servings: </span><span className=\"servingsLine servingsValue value\">{this.props.servings}</span>\r\n                    </div>\r\n                    <div key={this.props.id + 2} id=\"cooking_time\" className=\"recipeOutput\">\r\n                         <span className=\"ctLine cooking label\">Cooking Time: </span><span className=\"ctLine ctValue value\"> {this.props.cooking_time}</span>\r\n                    </div> \r\n                     <div key={this.props.id + 3} id=\"ingredients\" className=\"recipeOutput\">\r\n                        <span className=\"ingredsLine ingredients label\">Ingredients: </span><span className=\"ingredsLine ingredsValue value\"> {this.props.ingredients}</span>\r\n                    </div>\r\n                     <div key={this.props.id + 4} id=\"directions\" className=\"recipeOutput\">\r\n                        <span className=\"directLine directions label\">Directions: </span><span className=\"directLine directValue value\"> {this.props.directions}</span>\r\n                    </div>\r\n                </div>\r\n                <div key={this.props.id + 5} id=\"buttons\">\r\n                    <button onClick={this.props.edit} id=\"edit\"><FaEdit /></button><button onClick={this.props.remove} id=\"remove\"><FaRegTrashAlt /></button>\r\n                </div>\r\n                </>\r\n    ]\r\n}\r\n\r\nrenderAddedRecipe(){\r\nreturn [\r\n                <>\r\n                <div id=\"recipeName\" className=\"recipeOutput\">\r\n                    <h2>Add Your Dish</h2>\r\n                </div>\r\n                <div className=\"recipeInfo\">\r\n                    <div id=\"servings\" className=\"recipeOutput\">\r\n                        <span className=\"label servingsLine\">Servings: </span>\r\n                    </div>\r\n                    <div id=\"cooking_time\" className=\"recipeOutput\">\r\n                        <span className=\"label ctLine\">Cooking Time: </span>\r\n                    </div>\r\n                    <div id=\"ingredients\" className=\"recipeOutput\">\r\n                        <span className=\"label ingredsLine\">Ingredients: </span>\r\n                    </div>\r\n                    <div id=\"directions\" className=\"recipeOutput\">\r\n                        <span className=\"label directLine\">Directions: </span>\r\n                    </div>\r\n                </div>\r\n                <div id=\"buttons\">\r\n                    <button onClick={this.props.edit} id=\"edit\"><FaEdit /></button><button onClick={this.props.remove} id=\"remove\"><FaRegTrashAlt /></button>\r\n                </div>\r\n                </>\r\n]\r\n}\r\n\r\nrender(){\r\n    return (\r\n        <>\r\n        {this.props.initialRender === true ? this.initialRender() : this.props.recipeRender === true ? this.renderRecipe() : this.props.addRecipe === true ? this.renderAddedRecipe() : this.props.search === true ? this.renderRecipe() : null}\r\n        </>\r\n    )\r\n}\r\n}\r\n\r\nexport default RenderRight;","import React, { Component } from 'react';\r\nimport \"./Editform.css\";\r\nimport { FaSave, FaTimesCircle } from 'react-icons/fa';\r\n\r\nclass EditForm extends Component {\r\n\r\ncancelBtn(event, id){\r\n        this.props.cancel(event, id);\r\n    }\r\n\r\nrender(){\r\n    return[\r\n        <div id=\"header\" className=\"formOutput\">\r\n                    <h2>{this.props.dish}</h2>\r\n                </div>,\r\n                <div id=\"form\" onSubmit={this.props.save}>\r\n                    <form >\r\n                        <div id=\"formHeading\" className=\"formOutput\">\r\n                             <span>Name: </span><input type=\"text\" name=\"dish\" onChange={this.props.handleInputChange} defaultValue={this.props.dish} /><br />\r\n                        </div>\r\n                        <div  id=\"formServings\" className=\"formOutput\">\r\n                             <span>Servings: </span><input  type=\"text\" name=\"servings\" onChange={this.props.handleInputChange} defaultValue={this.props.servings} /><br />\r\n                        </div>\r\n                        <div  id=\"formCooking_time\" className=\"formOutput\">\r\n                            <span>Cooking Time: </span><input  type=\"text\" name=\"cooking_time\" onChange={this.props.handleInputChange} defaultValue={this.props.cooking_time} /><br />\r\n                        </div> \r\n                        <div  id=\"formIngredients\" className=\"formOutput\">\r\n                            <span>Ingredients: </span><textarea  rows=\"4\" cols=\"50\" name=\"ingredients\" onChange={this.props.handleInputChange} defaultValue={this.props.ingredients} /><br />\r\n                        </div>\r\n                        <div  id=\"formDirections\" className=\"formOutput\">\r\n                            <span>Directions: </span><textarea  rows=\"4\" cols=\"50\" name=\"directions\" onChange={this.props.handleInputChange} defaultValue={this.props.directions} /><br />\r\n                        </div>\r\n                        <div  id=\"formButtons\" className=\"formOutput\">\r\n                            <button id=\"save\"><FaSave /></button>\r\n                            <button id=\"cancel\" type=\"button\" onClick={this.cancelBtn.bind(this, this.props.id)}><FaTimesCircle /> </button>\r\n                        </div> \r\n                    </form>\r\n                </div>\r\n    ]\r\n}\r\n}\r\n\r\nexport default EditForm;","import React, { Component } from 'react';\r\nimport LeftPaneButtons from \"./leftpaneButtons\"; \r\nimport SearchResults  from \"./searchResults\"; \r\nimport RenderRight from \"./RenderBody\"; \r\nimport EditForm from \"./Editform\";\r\nimport { FaPlus, FaHome } from 'react-icons/fa';\r\nimport v4 from 'uuid';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      initialRender: true, //what to render when app is first loaded\r\n      recipeRender: false, //render recipe \r\n      addRecipe: false, //recipe is added\r\n      editForm: false, // render edit form when edit button is clicked\r\n      search: false, //boolean for search and how to render\r\n      recipes: [], //hold recipe collection\r\n      results: [], // used to hold results of search\r\n      id: \"\",\r\n      dish: \"\",\r\n      servings: \"\",\r\n      cooking_time: \"\",\r\n      ingredients: \"\",\r\n      directions: \"\", \r\n    }\r\n\r\n    this.recipeBtn = this.recipeBtn.bind(this);\r\n    this.add = this.add.bind(this);\r\n    this.nextid = this.nextid.bind(this);\r\n    this.resetAll = this.resetAll.bind(this);\r\n    this.editFunction = this.editFunction.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.save = this.save.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.userSelection = this.userSelection.bind(this);\r\n    this.focus = this.focus.bind(this);\r\n    this.editFormTrue = this.editFormTrue.bind(this);\r\n    this.searchValues = this.searchValues.bind(this);\r\n    this.home = this.home.bind(this);\r\n    this.cancel = this.cancel.bind(this);\r\n    this.helpIdGenerator = this.helpIdGenerator.bind(this);\r\n  }\r\n\r\n  componentWillMount(){\r\n    //localStorage.clear();\r\n    let getData = localStorage.getItem('getRecipes');\r\n\r\n    //used to create template recipes and store in client's computer\r\n    let initialArr = [{\r\n      id: 0,\r\n      dish: \"Hamburger\",\r\n      servings: 4,\r\n      cooking_time: \"20 minutes\",\r\n      ingredients: \"1 1/2 pounds ground beef; 2 Tablespoons BBQ sauce; 1 teaspoon kosher salt; 1/2 teaspoon pepper; 1/2 teaspoon garlic powder; 4 hamburger buns\",\r\n      directions: \"1) Preheat the grill to medium high. 2) Combine the ground beef, BBQ sauce, salt, garlic powder, and pepper in a medium-sized bowl. Mix just until combined with your hands and shape into 4 patties about 3/4-inch thick. Make a well in your patties with your thumb to prevent from bulging. 3) Place burgers on the grill and cook 4 to 5 minutes. Flip and then cook an additional 4-5 minutes, or until juices run clear. Top with cheese slices, if desired. Grill until cheese has melted and turn off the heat. 4) Serve hamburgers on buns with your favorite toppings. \"\r\n    },\r\n    { id: 1,\r\n      dish: \"Pepperoni Pizza\",\r\n      servings: 6,\r\n      cooking_time: \"20 minutes\",\r\n      ingredients:\"1 can (8 oz each) Hunt's Tomato Sauce-No Salt Added; 1/4 cup grated Parmesan cheese; 1/4 teaspoon dried oregano; 1 prebaked thin pizza crust (12-inch); 1 cup shredded part-skim mozzarella cheese; 1/3 cup sliced pepperoni\",\r\n       directions: \"1) Preheat oven to 450°F. Combine tomato sauce, Parmesan cheese and oregano in small bowl; spread tomato sauce evenly over crust. Sprinkle pizza with mozzarella cheese; top with pepperoni. 2) Place on ungreased pizza pan. Bake 12 to 15 minutes or until edges of crust are browned lightly and cheese melts. Cut pizza into 6 slices.\"\r\n    }\r\n  ]\r\n    //if getData is empty then run the initialArr variable to fill it or run the fuction localState if it's not null\r\n    getData === null ? this.setState({recipes: [...this.state.recipes, ...initialArr]}) : this.localSetState();\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    //set the local recipes that are stored\r\n    localStorage.setItem('getRecipes', JSON.stringify(this.state.recipes));\r\n    }\r\n\r\n  \r\n  helpIdGenerator(){\r\n    return v4()\r\n  }\r\n\r\n  //localSetState is ran when getData has actual data and used to populate the recipes array\r\n  localSetState(){\r\n      let getData = JSON.parse(localStorage.getItem('getRecipes'));\r\n      this.setState({\r\n        recipes: [...this.state.recipes, ...getData]\r\n      })\r\n    }\r\n\r\n    //if recipe button is pressed, run this\r\n  recipeBtn(id, event){\r\n      var value = this.state.recipes.filter(item => item.id === id);\r\n        this.setState({\r\n          id: value[0].id,\r\n          dish: value[0].dish,\r\n          servings: value[0].servings,\r\n          cooking_time: value[0].cooking_time,\r\n          directions: value[0].directions,\r\n          ingredients: value[0].ingredients,\r\n          addRecipe: false,\r\n          editForm: false,\r\n          initialRender: false,\r\n          search: false,\r\n          recipeRender: true\r\n        })\r\n      }\r\n\r\n  //function to add blank recipe card when button is clicked\r\n  add(text){\r\n\r\n    //add recipe to recipes array\r\n    this.setState({\r\n      recipes: [\r\n        ...this.state.recipes,\r\n        {\r\n          id: this.nextid(), //create new ID by running this function,\r\n          dish: text,\r\n          servings: \"\",\r\n          cooking_time: \"\",\r\n          ingredients: \"\",\r\n          directions: \"\",\r\n        }\r\n      ],\r\n      addRecipe: false,\r\n      recipeRender: false,\r\n      editForm: false,\r\n      search: false,\r\n      initialRender: true,\r\n    })\r\n  } \r\n\r\n  //used to create new IDs for recipes\r\n   nextid(){\r\n    const idList = this.state.recipes.map(i => i.id);\r\n    var num = 0;\r\n\r\n    var returnID = function(){\r\n      var check = idList.indexOf(num);\r\n\r\n      if (check === -1){\r\n        return num;\r\n      } else {\r\n        num++;\r\n        returnID();\r\n      }\r\n      return num;\r\n    }\r\n    \r\n    return returnID();\r\n    \r\n  }\r\n\r\n  //reset all checks for edit function\r\n  resetAll(){\r\n    this.setState({\r\n      initialRender: false,\r\n      addRecipe: false,\r\n      editForm: false,\r\n      search: false,\r\n      recipeRender: false\r\n    })\r\n  }\r\n\r\n  //run the EditForm componet when triggered\r\n  editFunction(){\r\n    return[\r\n      <div key={this.helpIdGenerator()} className=\"editForm\">\r\n        <EditForm key={this.helpIdGenerator()} id={this.state.id} dish={this.state.dish} servings={this.state.servings} cooking_time={this.state.cooking_time} ingredients={this.state.ingredients} directions={this.state.directions} handleInputChange={this.handleInputChange} save={this.save} cancel={this.cancel}/>\r\n      </div>\r\n    ]\r\n  }\r\n\r\n  //handle input change from <Editform />\r\n  handleInputChange(event){\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n        [name]: value\r\n    });\r\n  }\r\n\r\n  //save the editForm input values when \"Save\" button is clicked\r\n  save(e){\r\n    e.preventDefault();\r\n    let newRecipe = {\r\n      id: this.state.id,\r\n      dish: this.state.dish,\r\n      servings: this.state.servings,\r\n      cooking_time: this.state.cooking_time,\r\n      ingredients: this.state.ingredients,\r\n      directions: this.state.directions\r\n  }\r\n    this.setState(prevState => ( {\r\n      recipes: prevState.recipes.map(\r\n        recipe => (recipe.id !== this.state.id) ? recipe : {...recipe, ...newRecipe}),\r\n      initialRender: false,\r\n      addRecipe: false,\r\n      editForm: false,\r\n      search: false,\r\n      recipeRender: true\r\n    } \r\n    ))  \r\n\r\n}\r\n\r\n//remove recipe \r\nremove(id){\r\n  this.setState(prevState => ({\r\n    recipes: prevState.recipes.filter(recipe => recipe.id !== this.state.id),\r\n      recipeRender: false, \r\n      addRecipe: false, \r\n      editForm: false,\r\n      search: false,\r\n      initialRender: true,\r\n  }))\r\n}\r\n\r\n//when user selects an option from the drop down suggestion menu, this gets triggered. It updates and renders the recipe they selected.\r\nuserSelection(sentValue){\r\n\r\nvar value;\r\n  if (sentValue === null){\r\n   value = ''\r\n  } else {\r\n    value = this.state.recipes.filter(item => item.id === sentValue.value);\r\n  }\r\n\r\n\r\nif (value !== ''){\r\n  this.setState({\r\n    id: value[0].id,\r\n    dish: value[0].dish,\r\n    servings: value[0].servings,\r\n    cooking_time: value[0].cooking_time,\r\n    ingredients: value[0].ingredients,\r\n    directions: value[0].directions\r\n})\r\n/* } else if (){\r\n */\r\n} else {\r\n  this.setState({\r\n    id: '',\r\n    dish: '',\r\n    servings: '',\r\n    cooking_time: '',\r\n    ingredients: '',\r\n    directions: ''\r\n})\r\n}\r\n      \r\n  if(this.state.search === false){\r\n    this.setState({\r\n      search: true,\r\n    })\r\n  } \r\n}\r\n\r\n//when user selects the input, this gets triggered. \r\nfocus(){\r\n  if(this.state.editForm === true){\r\n    this.setState({\r\n      recipeRender: false, \r\n      addRecipe: false, \r\n      editForm: false,\r\n      search: false,\r\n      initialRender: false,\r\n    })\r\n  }else if(this.state.editForm === false){\r\n    this.setState({\r\n      recipeRender: false, \r\n      addRecipe: false, \r\n      editForm: false,\r\n      search: false,\r\n      initialRender: false,\r\n    })\r\n  }\r\n}\r\n\r\n//sets the editForm state to true\r\neditFormTrue(){\r\n    this.setState({\r\n      editForm: true\r\n    })\r\n}\r\n\r\n//values for drop down select input\r\nsearchValues(){\r\n  return this.state.recipes.map(item => ({ label: item.dish === null ? '' : item.dish, value: item.id }));\r\n}\r\n\r\n//method to basically reset the app\r\nhome(){\r\nthis.setState({\r\n      addRecipe: false,\r\n      editForm: false,\r\n      search: false,\r\n      recipeRender: false,\r\n      initialRender: true\r\n})\r\n}\r\n\r\n//method to cancel out of the edit method process\r\ncancel(id, event){\r\n  var recipeObj = this.state.recipes.filter((recipe) => recipe.id === id);\r\n  event.preventDefault();\r\n  this.setState(({\r\n    id: recipeObj[0].id,\r\n    dish: recipeObj[0].dish,\r\n    servings: recipeObj[0].servings,\r\n    cooking_time: recipeObj[0].cooking_time,\r\n    ingredients: recipeObj[0].ingredients,\r\n    directions: recipeObj[0].directions,\r\n    editForm: false,\r\n    search: false,\r\n    initialRender: false,\r\n    addRecipe: false,\r\n    recipeRender: true\r\n  }))  \r\n}\r\n\r\n  render(){\r\n   return [\r\n     <div id=\"headerTitle\">\r\n       <h1>Recipe Box</h1>\r\n     </div>,\r\n     <div key={this.helpIdGenerator()} id=\"appBox\">\r\n      <div id=\"left-pane\">\r\n        <div id=\"search\">\r\n            <h2 id=\"headerContainer\"><span>Dishes</span></h2>\r\n            <hr className=\"dishHR hrStyle\" />\r\n        </div>\r\n        <div id=\"results\">\r\n            <SearchResults values={this.searchValues()} userSelection={this.userSelection} focus={this.focus}  /> \r\n            {this.state.search === false ? <LeftPaneButtons  values={this.state.recipes} recipeBtns={this.recipeBtn}/> : null}\r\n        </div>\r\n        <div id=\"addDiv\">\r\n           <button className=\"homeCancel\" onClick={this.home} ><FaHome /></button>\r\n           <button className=\"addBtn\" onClick={this.add.bind(null, \"Add Your Dish\")}><FaPlus className=\"plusIcon\" /></button>\r\n        </div>\r\n      </div>\r\n        {this.state.editForm ? this.editFunction() : <div key={this.helpIdGenerator()} id=\"recipes-body\">\r\n        <RenderRight key={this.helpIdGenerator()} initialRender={this.state.initialRender} recipeRender={this.state.recipeRender} addRecipe={this.state.addRecipe} id={this.state.id} dish={this.state.dish} servings={this.state.servings} cooking_time={this.state.cooking_time} ingredients={this.state.ingredients} directions={this.state.directions} resetStates={this.resetAll} remove={this.remove} search={this.state.search} edit={this.editFormTrue} />\r\n        </div>}\r\n        </div>\r\n     \r\n    ]\r\n  }\r\n}\r\n\r\nexport default App; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}